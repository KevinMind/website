services:
  base:
    extends:
      file: docker/docker-compose.service.yml
      service: base
    command: ["sleep", "infinity"]

  packages:
    extends:
      file: docker/docker-compose.service.yml
      service: base
    command: ["pnpm", "run", "--filter=./packages/*", "dev"]

  web:
    extends:
      file: docker/docker-compose.service.yml
      service: base
    environment:
      SERVICE_NAME: web
      PORT: 80
      SERVICE_PUBLIC_PATH: /
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/__version__"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      backend:
        condition: service_started
      packages:
        condition: service_started

  backend:
    extends:
      file: docker/docker-compose.service.yml
      service: base
    environment:
      SERVICE_NAME: backend
      SERVICE_PUBLIC_PATH: /api
      DATABASE_URL: postgres://user:password@db:5432/database
      SITE_URL: http://localhost:${DOCKER_PORT:?}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/__version__"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - data_postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready -U website -d website']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  nginx:
    image: nginx:latest
    volumes:
      - ./docker/nginx:/etc/nginx/templates
    ports:
      - "${DOCKER_PORT:?}:80"
    networks:
      default:
    depends_on:
      web:
        condition: service_started
      backend:
        condition: service_started
    environment:
      WEB_PUBLIC_URL: ${WEB_PUBLIC_URL:-http://web:80}
      BACKEND_PUBLIC_URL: ${BACKEND_PUBLIC_URL:-http://backend:80}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  default:
    driver: bridge
    enable_ipv6: false

volumes:
  data_postgres:
