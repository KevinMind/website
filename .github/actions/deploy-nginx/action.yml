name: Deploy Nginx
description: Deploy the nginx router for the given environment

inputs:
  token:
    description: The Fly API token
    required: true
  apps:
    description: The list of apps to deploy
    required: true
  environment:
    description: The environment to deploy nginx for
    required: true

outputs:
  public_url:
    description: The public URL of the app
    value: ${{ steps.config.outputs.public_url }}

runs:
  using: 'composite'
  steps:
    - name: Config
      id: config
      shell: bash
      env:
        apps: ${{ inputs.apps }}
        environment: ${{ inputs.environment }}
      run: |
        if [ -z "${apps}" ]; then
          echo "No apps to deploy"
          exit 1
        fi

        if [ -z "${environment}" ]; then
          echo "No environment to deploy"
          exit 1
        fi

        app_name="nopo-${environment}"
        config="docker/fly/${app_name}.toml"
        env=""

        env=$(echo "${apps}" | jq -r \
          --arg environment "${environment}" \
          '.[] | "--env " + (. | sub("nopo-" + $environment + "-"; "") | ascii_upcase) + "_PUBLIC_URL=https://" + . + ".fly.dev"' \
          | tr '\n' ' ')

        echo "app_name=${app_name}" >> "$GITHUB_OUTPUT"
        echo "config=${config}" >> "$GITHUB_OUTPUT"
        echo "env=${env}" >> "$GITHUB_OUTPUT"
        echo "public_url=https://${app_name}.fly.dev" >> "$GITHUB_OUTPUT"
        cat "$GITHUB_OUTPUT"

    - name: Deploy to Fly
      shell: bash
      env:
        FLY_API_TOKEN: ${{ inputs.token }}
        app_name: ${{ steps.config.outputs.app_name }}
        config: ${{ steps.config.outputs.config }}
        env: ${{ steps.config.outputs.env }}
      run: |
        flyctl deploy \
          --dockerfile docker/Dockerfile.nginx \
          --app "${app_name}" \
          --config "${config}" \
          --depot=false \
          ${env}

