name: Merge Queue

on:
  push:
    branches:
      - main
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name}}
  cancel-in-progress: true

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  context:
    runs-on: ubuntu-latest
    outputs:
      is_direct_push: ${{ steps.actor.outputs.is_direct_push }}
    steps:
      - uses: actions/checkout@v4

      - name: Set push
        id: context
        uses: ./.github/actions/context

      - name: Check Actor
        id: actor
        run: |
          # The event.sender.login for the user that pushed the commit.
          actor="${{ github.event.sender.login }}"
          # The name of the merge queue bot.
          merge_actor="github-merge-queue[bot]"

          is_direct_push=false

          if [[ "$actor" != "$merge_actor" ]]; then
            is_direct_push=true
          fi

          echo "is_direct_push=$is_direct_push" >> $GITHUB_OUTPUT
          cat "$GITHUB_OUTPUT"

  build:
    needs: context
    # We should continue with the build on merge queue runs
    # or if we pushed a commit bypassing the merge queue.
    if: github.event_name == 'merge_group' || needs.context.outputs.is_direct_push == 'true'
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    uses: ./.github/workflows/_build.yml
    secrets: inherit
    with:
      push: true

  test:
    needs: build
    permissions:
      packages: read
      contents: read
    uses: ./.github/workflows/_test.yml
    with:
      tag: ${{ needs.build.outputs.tag }}
      registry: ${{ needs.build.outputs.registry }}
      username: ${{ needs.build.outputs.username }}
    secrets:
      password: ${{ secrets.GITHUB_TOKEN}}

  deploy_stage:
    needs: test
    permissions:
      contents: read
      packages: read
    uses: ./.github/workflows/_deploy.yml
    with:
      environment: stage

  deploy_prod:
    needs: deploy_stage
    permissions:
      contents: read
      packages: read
    uses: ./.github/workflows/_deploy.yml
    with:
      environment: prod
