name: CI

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: read

defaults:
  run:
    shell: bash

env:
  DOCKER_RUN_ARGS: --no-deps --quiet-pull --rm

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    outputs:
      tag: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Derive tag
        id: tag
        run: |
          target="production"
          sha="${{ github.sha }}"
          short_sha="${sha:0:7}"

          registry="ghcr.io"
          image="${{ github.repository}}"
          version="sha:${short_sha}-${target}"

          echo "target=${target}" >> "$GITHUB_OUTPUT"
          echo "short_sha=${short_sha}" >> "$GITHUB_OUTPUT"
          echo "registry=${registry}" >> "$GITHUB_OUTPUT"
          echo "image=${image}" >> "$GITHUB_OUTPUT"
          echo "version=${version}" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.tag.outputs.registry }}/${{ steps.tag.outputs.image }}
          tags: |
            type=raw,value=${{ steps.tag.outputs.version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.tag.outputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        env:
          WEB_DOCKER_TAG: ${{ steps.meta.outputs.tags }}
          DOCKER_TARGET: ${{ steps.tag.outputs.target }}
          NODE_ENV: ${{ steps.tag.outputs.target }}
        run: make turbo build

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: |
          make turbo up
          make docker npm run lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Typecheck
        run: |
          make turbo up
          make docker npm run typecheck
