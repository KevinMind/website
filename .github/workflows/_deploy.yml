name: Deploy

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The tag to deploy'
        required: true
        type: string
      environment:
        description: 'The environment to deploy to'
        required: true
        type: choice
        options:
          - staging
          - production
  workflow_call:
    inputs:
      tag:
        description: 'The tag to deploy'
        required: true
        type: string
      environment:
        description: 'The environment to deploy to'
        required: true
        type: string

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  # The deployment process is repeated for all environments.
  # 1) pull the image from ghcr
  # 2) tag the image with the environment name
  # 3) push the image to the environment's container registry
  # 4) wait for the environment to have the image running
  # 5) run the smoke tests on the environment
  # 6) update the latest image for the environment container registry
  # 7) wait for approval to continue based on the environment protection rules.

  push:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Docker tag (ghcr)
        id: input_tag
        uses: ./.github/actions/docker-tag
        with:
          tag: ${{ inputs.tag }}

      - name: Login Docker
        uses: ./.github/actions/login-docker
        with:
          registry: ${{ steps.input_tag.outputs.registry }}
          username: ${{ steps.input_tag.outputs.username }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: |
          docker pull ${{ inputs.tag }}

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Docker tag (fly)
        id: output_tag
        uses: ./.github/actions/docker-tag
        with:
          registry: registry.fly.io
          username: x
          image: ${{ secrets.APP_NAME }}
          version: ${{ steps.input_tag.outputs.version }}

      - name: Push image
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          docker push ${{ steps.output_tag.outputs.tag }}

  ready:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - name: Wait for deployment
        run: |
          echo "Waiting for deployment"

  test:
    needs: ready
    runs-on: ubuntu-latest
    steps:
      - name: Run smoke test
        run: |
          echo "Running smoke test"

  approve:
    needs: test
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Wait for approval
        run: |
          echo "Waiting for approval"

