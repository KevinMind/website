name: Build and Push

on:
  workflow_call:
    inputs:
      registry:
        description: 'The registry to use for the build'
        required: true
        type: string
      image:
        description: 'The image to build and push'
        required: true
        type: string
      username:
        description: 'The username to use for the build'
        required: true
        type: string

    secrets:
      password:
        description: 'The password to use for the build'
        required: true

    outputs:
      registry:
        description: 'The registry of the build'
        value: ${{ jobs.build.outputs.registry }}
      image:
        description: 'The image of the build'
        value: ${{ jobs.build.outputs.image }}
      version:
        description: 'The version of the build'
        value: ${{ jobs.build.outputs.version }}
      digest:
        description: 'The digest of the build'
        value: ${{ jobs.build.outputs.digest }}
      tag:
        description: 'The tag of the build'
        value: ${{ jobs.build.outputs.tag }}

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  build:
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.docker_tag.outputs.registry }}
      image: ${{ steps.docker_tag.outputs.image }}
      version: ${{ steps.docker_tag.outputs.version }}
      digest: ${{ steps.docker_tag.outputs.digest }}
      tag: ${{ steps.docker_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          bake-target: default
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker
        id: docker
        uses: ./.github/actions/setup-docker
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.username }}
          password: ${{ secrets.password }}

      - name: Build and push
        id: build
        uses: docker/bake-action@v6
        env:
          DOCKER_REGISTRY: ${{ inputs.registry }}
          DOCKER_IMAGE: ${{ inputs.image }}
          DOCKER_VERSION: ${{ steps.docker_meta.outputs.version }}
          DOCKER_TARGET: production
          NODE_ENV: production
        with:
          builder: ${{ steps.docker.outputs.builder }}
          files: |
            docker-bake.hcl
            cwd://${{ steps.docker_meta.outputs.bake-file-tags }}
            cwd://${{ steps.docker_meta.outputs.bake-file-labels }}
          push: true

      - name: Write metadata
        id: build_meta
        run: |
          cat <<EOF > metadata.json
          ${{ steps.build.outputs.metadata }}
          EOF
          echo "image=$(cat metadata.json | jq -r '.base["image.name"]')" >> "$GITHUB_OUTPUT"
          echo "digest=$(cat metadata.json | jq -r '.base["containerimage.digest"]')" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"

      - name: Extract tag
        id: docker_tag
        uses: ./.github/actions/docker-tag
        with:
          tag: "${{ steps.build_meta.outputs.image }}@${{ steps.build_meta.outputs.digest }}"
