name: Build

on:
  workflow_call:
    inputs:
      push:
        description: 'Whether to push the image'
        required: true
        type: boolean

    outputs:
      registry:
        description: 'The registry of the build'
        value: ${{ jobs.build.outputs.registry }}
      image:
        description: 'The image of the build'
        value: ${{ jobs.build.outputs.image }}
      version:
        description: 'The version of the build'
        value: ${{ jobs.build.outputs.version }}
      digest:
        description: 'The digest of the build'
        value: ${{ jobs.build.outputs.digest }}
      tag:
        description: 'The tag of the build'
        value: ${{ jobs.build.outputs.tag }}

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  build:
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.output_tag.outputs.registry }}
      image: ${{ steps.output_tag.outputs.image }}
      version: ${{ steps.output_tag.outputs.version }}
      digest: ${{ steps.output_tag.outputs.digest }}
      tag: ${{ steps.output_tag.outputs.tag }}
    env:
      build_metadata: build-metadata.json
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          bake-target: default
          tags: |
            type=sha

      - name: Input tag
        id: input_tag
        uses: ./.github/actions/docker-tag
        with:
          registry: ghcr.io
          image: ${{ github.repository }}
          version: ${{ steps.docker_meta.outputs.version }}

      - name: Set up Docker
        id: docker
        uses: ./.github/actions/setup-docker
        with:
          registry: ${{ inputs.push && 'ghcr.io' || '' }}
          username: ${{ inputs.push && github.actor || '' }}
          password: ${{ inputs.push && secrets.GITHUB_TOKEN || '' }}

      - name: Build
        id: build
        env:
          DOCKER_BUILDER: ${{ steps.docker.outputs.builder }}
          DOCKER_TAG: ${{ steps.input_tag.outputs.tag }}
          DOCKER_BUILD: ${{ format('{0}/actions/runs/{1}', github.event.repository.html_url, github.run_id) }}
          DOCKER_PUSH: ${{ inputs.push }}
          DOCKER_METADATA_FILE: ${{ env.build_metadata }}
        run: |
          make build \
            DOCKER_BUILDER="${DOCKER_BUILDER}" \
            DOCKER_TAG="${DOCKER_TAG}" \
            DOCKER_BUILD="${DOCKER_BUILD}" \
            DOCKER_PUSH="${DOCKER_PUSH}"

      - name: Extract build digest
        id: digest
        env:
          push: ${{ inputs.push }}
          tag: ${{ steps.input_tag.outputs.tag }}
          meta: ${{ env.build_metadata }}
        run: |
          if [[ "$push" == "true" ]]; then
            raw_json=$(docker buildx imagetools inspect $tag --raw)
            digest=$(echo $raw_json | jq -r '.manifests[0].digest')
          else
            digest=""
          fi

          echo "digest=$digest" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"

      - name: Output tag
        id: output_tag
        uses: ./.github/actions/docker-tag
        with:
          registry: ${{ steps.input_tag.outputs.registry }}
          image: ${{ steps.input_tag.outputs.image }}
          version: ${{ steps.input_tag.outputs.version }}
          # Add the digest to the output tag so we can easily pull the exact build later.
          digest: ${{ inputs.push && steps.digest.outputs.digest || '' }}
